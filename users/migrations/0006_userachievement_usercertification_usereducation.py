# Generated by Django 5.0.1 on 2025-05-10 16:19

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0005_create_missing_profiles'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Achievement title', max_length=200)),
                ('type', models.CharField(choices=[('award', 'Award'), ('scholarship', 'Scholarship'), ('honor', 'Honor/Recognition'), ('publication', 'Publication'), ('patent', 'Patent'), ('grant', 'Grant'), ('general', 'General Achievement')], default='general', help_text='Type of achievement', max_length=20)),
                ('organization', models.CharField(blank=True, help_text='Organization that granted the achievement', max_length=200)),
                ('date_received', models.CharField(blank=True, help_text='Date when the achievement was received', max_length=50)),
                ('description', models.TextField(blank=True, help_text='Description of the achievement and its significance')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_achievements', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User achievements',
                'ordering': ['-date_received', 'title'],
            },
        ),
        migrations.CreateModel(
            name='UserCertification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Certification name or title', max_length=200)),
                ('issuer', models.CharField(blank=True, help_text='Organization that issued the certification', max_length=200)),
                ('date_earned', models.CharField(blank=True, help_text='Date when the certification was earned', max_length=50)),
                ('expiration_date', models.CharField(blank=True, help_text='Expiration date (if applicable)', max_length=50)),
                ('credential_id', models.CharField(blank=True, help_text='Certification number or credential ID', max_length=100)),
                ('credential_url', models.URLField(blank=True, help_text='URL to verify the certification')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='certifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User certifications',
                'ordering': ['-date_earned', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserEducation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('institution', models.CharField(help_text='School, college, or university name', max_length=200)),
                ('degree', models.CharField(help_text='Degree or certificate earned', max_length=200)),
                ('field_of_study', models.CharField(blank=True, help_text='Major or field of study', max_length=200)),
                ('graduation_date', models.CharField(blank=True, help_text='Date or year of graduation', max_length=50)),
                ('gpa', models.CharField(blank=True, help_text='GPA or academic performance metric', max_length=10)),
                ('additional_info', models.TextField(blank=True, help_text='Additional information, honors, activities, etc.')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='education', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User education',
                'ordering': ['-graduation_date', 'institution'],
            },
        ),
    ]

# Generated by Django 5.2.1 on 2025-06-01 20:20

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('icon', models.CharField(help_text='Emoji or icon class', max_length=50)),
                ('requirement_type', models.CharField(help_text='Type of achievement (courses_completed, streak, skill_level, total_hours)', max_length=50)),
                ('requirement_value', models.IntegerField(help_text='Value required to earn this achievement')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('instructor', models.CharField(max_length=100)),
                ('duration_hours', models.IntegerField(default=0)),
                ('difficulty_level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseProgressNote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='LearningResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the course', max_length=200)),
                ('platform', models.CharField(choices=[('coursera', 'Coursera'), ('udemy', 'Udemy'), ('linkedin', 'LinkedIn Learning'), ('pluralsight', 'PluralSight'), ('other', 'Other Platform')], help_text='Platform hosting the course', max_length=50)),
                ('resource_url', models.URLField(help_text='Direct link to the course')),
                ('description', models.TextField(blank=True, help_text='Brief description of what the course covers')),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], help_text='Course difficulty level', max_length=20)),
                ('clicks', models.IntegerField(default=0, help_text='Number of times this resource was accessed')),
                ('last_accessed', models.DateTimeField(auto_now=True, help_text='Last time this resource was accessed')),
            ],
        ),
        migrations.CreateModel(
            name='LearningStreak',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_streak', models.IntegerField(default=0)),
                ('longest_streak', models.IntegerField(default=0)),
                ('last_activity_date', models.DateField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SavedResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('url', models.URLField()),
                ('description', models.TextField(blank=True)),
                ('resource_type', models.CharField(choices=[('article', 'Article'), ('video', 'Video'), ('book', 'Book'), ('podcast', 'Podcast'), ('documentation', 'Documentation'), ('other', 'Other')], max_length=20)),
                ('date_saved', models.DateTimeField(auto_now_add=True)),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('notes', models.TextField(blank=True, help_text='Personal notes about this resource')),
            ],
            options={
                'ordering': ['-date_saved'],
            },
        ),
        migrations.CreateModel(
            name='UserAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_earned', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='CourseProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('not_started', 'Not Started'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('paused', 'Paused')], default='not_started', max_length=20)),
                ('date_started', models.DateTimeField(blank=True, null=True)),
                ('date_completed', models.DateTimeField(blank=True, null=True)),
                ('last_activity_date', models.DateTimeField(auto_now=True)),
                ('estimated_hours_spent', models.DecimalField(decimal_places=1, default=0, max_digits=5)),
                ('notes', models.TextField(blank=True, help_text='Current notes about this course')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='learning.course')),
            ],
            options={
                'ordering': ['-last_activity_date'],
            },
        ),
    ]
